// Giải pháp 2
// Liệt kê tập con và sinh hoán vị từ mỗi 1 tập con đó




#include <iostream>
using namespace std;

bool check = true;
bool check1 = true;

void nhap(int *a,int k){
	a[0] = 1;
	for(int i=1;i<k;i++){
		a[i] = a[i-1]+1;
	}
}

void xuat(int *a, int k){
	for(int i=0;i<k;i++){
		cout << a[i] << " ";
	}
	cout << endl;
}

void thuattoan(int *a, int n, int k){
	//1
	int x = k-1;
	while(x>=0 && a[x] == n-k+x+1) x--; 
	//2
	if(x < 0){
		check = false;
		return;
	}
	//3
	a[x]++;
	for(int i=x;i<k-1;i++){
		a[i+1] = a[i]+1; 
	}
}



void swap(int &x, int &y){
	int temp = x;
	x = y;
	y = temp;
}

void bubbleSort(int *a, int k, int x){
	for(int i=x;i<k;i++){
		for(int j=k-1;j>i;j--){
			if(a[j] < a[j-1]) swap(a[j],a[j-1]);
		}
	}
}

void thuattoan2(int *a, int k){
	//1
	int x = k-1;
	while(x>=0 && a[x] < a[x-1]) x--;
	//2
	if(x <= 0){
		check1 = false;
		return;
	}
	//3
	if(x == k-1) swap(a[x], a[x-1]);
	else{
		int y = k-1;
		while(y >= 0 && a[x-1] > a[y]) y--;
		swap(a[x-1],a[y]);
		bubbleSort(a,k,x);
	}
}

int main(){
	int n;
	cin >> n;
	int k;
	cin >> k;
	int *a = new int[k];
	nhap(a,k);
	while(check == true){
		xuat(a,k);
		while(check1 == true){
			thuattoan2(a,k);
			if(check1 == true) xuat(a,k);
		}
		check1 = true;
		bubbleSort(a,k,0);
		thuattoan(a,n,k);		
	}
	delete(a);
	return 0;
}
